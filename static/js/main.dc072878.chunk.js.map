{"version":3,"sources":["apiFacil/index.js","components/form.js","App.js","serviceWorker.js","index.js"],"names":["Index","className","style","backgroundColor","marginTop","padding","height","src","alt","marginBottom","Option","Select","APIForm","props","Form","useForm","form","useState","imageFront","setImageFront","imageBack","setImageBack","imageLiveness","setImageLiveness","information","setInformation","visible","setVisible","confirmLoading","setConfirmLoading","setModalText","dtype","setdtype","tokenFront","setTokenFront","tokenBack","setTokenBack","tokenliveness","setTokenLiveness","hidden","setHidden","viewDiv","setViewDiv","viewDiv1","setViewDiv1","viewDiv2","setViewDiv2","div","spinner","setSpinner","divAutocaptureBack","useRef","values","a","getSessionId","sessionId","console","log","autocapture","window","TOCautocapture","locale","session_id","document_type","document_side","callback","captured_token","image","message","success","token","image64","divLiveness","failure","error","e","http","divAutocaptureFront","imgFront","TOCliveness","liveness_token","retry_on_timeout","axios","get","response","data","onFinish","formData","FormData","append","post","status","navegador","navigator","userAgent","color","textAlign","paddingTop","placeholder","onChange","value","preview","lg","xs","alignItems","Item","paddingBottom","type","onClick","htmlType","title","onOk","setTimeout","onCancel","name","nationality","gender","width","id","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.dc072878.chunk.js","sourcesContent":["import React from 'react'\nimport { \n    Link\n} from \"react-router-dom\";\nimport Form from '../components/form';\n\nfunction Index() {\n\n    return (\n        <div className=\"card pl-6\" style={{backgroundColor:'#03324B'}} >\n            <img className=\"card-img-top\" style={{marginTop:20, backgroundColor: '#18938B', padding:10}}  height={70} src=\"https://www.tocbiometrics.com/img/logoTOC.svg\" alt=\"Card image cap\"/>\n            <div className=\"card-body\">\n            <p className=\"card-text text-white font-weight-bold text-center\">Â¡Te damos la bienvenida a la Demo de TOC Biometrics!</p>\n            </div>\n            <div className=\"text-center\">\n                <button className=\"card-btn border border border-primary rounded cardtext-align:center\" style={{marginBottom: 20}}>\n                        <img src=\"https://dev-web-plugins.s3.amazonaws.com/demo-toc-ci/static/onboarding.svg\"/>\n                </button>\n            </div>\n            <p className=\"card-text text-white font-weight-bold text-center\">Onboarding</p>\n        </div>\n    )\n}\n\nexport default Index\n","import {Button, Col, Form, Row, Select, message, Modal, Image, Spin} from \"antd\";\nimport React, { useState, useRef} from \"react\";\nimport axios from \"axios\";\nimport ApiFacial from \"../apiFacil/index\";\nconst {Option} = Select;\n\nconst APIForm  = (props) => {\n    const [form] = Form.useForm();\n    const [imageFront, setImageFront] = useState(\"\");\n    const [imageBack, setImageBack] = useState(''); \n    const [imageLiveness, setImageLiveness] = useState('');\n    const [information, setInformation] = useState({});\n    const [visible, setVisible] = useState(false);\n    const [confirmLoading, setConfirmLoading] = useState(false);\n    const [modalText, setModalText] = useState('');\n    const [dtype, setdtype] = useState(\"\"); \n    const [tokenFront, setTokenFront] = useState(\"\")\n    const [tokenBack, setTokenBack] = useState(\"\")\n    const [tokenliveness, setTokenLiveness] = useState(\"\")\n    const [hidden, setHidden] = useState(false)\n    const [viewDiv, setViewDiv] = useState(true)\n    const [viewDiv1, setViewDiv1] = useState(true)\n    const [viewDiv2, setViewDiv2] = useState(true)\n    const [div, setDiv] = useState(false)\n    const [spinner, setSpinner] = useState(true)\n\n    const ref = useRef(null)\n    \n    const onChange = (value) =>{\n        const a = value\n        setdtype(a)\n        setHidden(true)\n        console.log(dtype)\n    }\n\n    const divAutocaptureBack = async (values) =>{\n        setViewDiv1(false)//estado para mostrar u ocultar sdk\n        const sessionId = await getSessionId();//almacenamos el session id en una constante\n        console.log('Session id', sessionId)\n        const autocapture = window.TOCautocapture;//accedemos a la cdn que anexamos en el index.html\n        const TOCautocapture = autocapture;//almacenamos el objeto de la libreria en una variable\n\n        TOCautocapture('container', { //accedemos a ella con los parametrros indicados con el id container\n            locale: \"es\",//idioma \n            session_id: sessionId,//la session generada previamente\n            document_type: dtype, //el tipo de coumento\n            document_side: \"back\",//parte trasera o frontal del documentp\n            callback: function(captured_token, image){ //si es success realizamos el callback donde obtendremos el token y la imagen en base64 \n            message.success('Captura Realizada', 3)//mensaje a mostrar al usuario con la libreria antd\n            const token = captured_token//almacenamos el token\n            const image64 = image//almacenamos la imagen\n            console.log(captured_token)   \n            setTokenBack(token)//seteamos el token a utilizar en los servicios que lo requieran\n            setImageBack(image64)//seteamos la imagen a utilizar en los servicios que lo requieran\n            setViewDiv1(true)//estado para mostrar u ocultar sdk\n            divLiveness()//se ejecuta el siguiente sdk en este caso es liveness\n\n        },\n           failure: function(error){ \n            const e = error\n            if (e === 405){\n                e = \"prueba de error\"\n            }else{\n                e = \"prueba de error 2\"\n            }\n            message.error (e)\n            },//en caso de error mostramos el mensaje con el error a mostrar, los errores se anexan en la documentaciÃ³n\n           http: true, //dejar seteado si es un ambiente de desarrollo\n       }) \n    } \n\n    const divAutocaptureFront = async (values) =>{\n        setViewDiv(false)//estado para mostrar u ocultar sdk\n        const sessionId = await getSessionId();//almacenamos el session id en una constante, de igual manera pueden setearlo en un estado para no llamar constantemente la funciÃ³n\n        console.log('Session id', sessionId)\n        const autocapture = window.TOCautocapture;//accedemos a la cdn que anexamos en el index.html\n        const TOCautocapture = autocapture;//almacenamos el objeto de la libreria en una variable\n\n        TOCautocapture('containerfront', {//accedemos a ella con los parametrros indicados\n            locale: \"es\",//\n            session_id: sessionId,//la session generada previamente\n            document_type: dtype, //el tipo de coumento\n            document_side: \"front\",\n            callback: function(captured_token, image){ \n            message.success('Captura Realizada', 3);\n            console.log(image)  \n            const imgFront = image \n            const tokenF = captured_token\n            setTokenFront(tokenF)\n            setImageFront(imgFront)\n            setViewDiv(true)\n            divAutocaptureBack()\n        },\n        failure: function(error){ \n            console.log(error)\n            let e = error\n            if (e === \"405\"){\n                e = \"prueba de error\"\n            }else{\n                e = \"prueba de error 2\"\n            }\n        message.error(e)\n        \n        } , \n        http: true,\n    }) \n    } \n\n    const divLiveness = async () =>{\n\n        setViewDiv2(false)//estado para mostrar u ocultar sdk\n        const sessionId = await getSessionId();//almacenamos el session id en una constante, de igual manera pueden setearlo en un estado para no llamar constantemente la funciÃ³n\n        console.log('Session id', sessionId)\n        const autocapture = window.TOCliveness;//accedemos a la cdn que anexamos en el index.html\n        const TOCliveness  = autocapture;//almacenamos el objeto de la libreria en una variable\n        TOCliveness ('liveness', {//accedemos a ella con los parametrros indicados con el id=liveness\n        locale: \"es\",//idioma\n        http: true,\n        session_id: sessionId,\n/*         alt_server: \"https://prod-liveness.tocws.com\",\n        url_lbliv: \"https://prod-api.7oc.cl/liveness/image-saver/v1\",    */\n        callback: function(liveness_token, image){ //si es success realizamos el callback donde obtendremos el token\n        message.success('Captura Realizada', 3)//mensaje a mostrar al usuario con la libreria antd\n        const tl= liveness_token //almacenamos el token en una constanye\n        const imageLiveness = image\n        setTokenLiveness(tl)//seteamos el liveness a utilizar en otros llamados\n        setImageLiveness(imageLiveness)\n        setViewDiv2(true)//estado para mostrar u ocultar sdk\n        },\n        retry_on_timeout: true,\n        failure: function(error){ message.error('Se ha generado el error: ' + error)\n        console.log(\"el error es: \" + error)\n    },\n\n        //en caso de error mostramos el mensaje con el error a mostrar, los errores se anexan en la documentaciÃ³n\n    }) \n    } \n\n\n\n    const showModal = () => {\n        setVisible(true);\n    };\n    const handleOk = () => {\n        setModalText('El modal se cerrara en dos segundos');\n        setConfirmLoading(true);\n        setTimeout(() => {\n          setVisible(false);\n          setConfirmLoading(false);\n        }, 2000);\n    };\n\n    const handleCancel = () => {\n        console.log('Clicked cancel button');\n        setVisible(false);\n    };\n\n    const cols = {\n        padding: 10\n    };\n\n    const getSessionId = async () => {\n        try{\n            const response = await axios.get('https://node-js-session.herokuapp.com/session')//generamos el session_id desde un backend\n            console.log('Session id response', response)\n            return response.data.session_id;\n        }catch(err){\n            console.log('Error al obtener sesiÃ³n', err)\n        }\n    }\n\n/*     const statusMatch = ()=>{\n        if (match === 2) {\n            message.success(\"Resultado positivo con un 99.99% de confianza.\")\n            if (match === 1) {\n                message.warning(\"[DEPRECADO] Resultado positivo con un 96.5% de confianza.\")\n            }if (match === 0) {\n                message.error(\"Resultado negativo de la verificaciÃ³n.\")\n            }if (match === -1) {\n                message.error(\"No se ha podido encontrar una cara en la imagen enviada.\")\n            }\n        }\n    } */\n\n    const apiKey = '433a8e1ed0dc4495974a9f95018eed8f' //api key entregada al cliente\n    const onFinish = async () => {//func\n            setSpinner(false)\n            let formData = new FormData();\n            formData.append('id_front',tokenFront )\n            formData.append('id_back',tokenBack )\n            formData.append('selfie', tokenliveness)\n            formData.append('apiKey', apiKey) \n            formData.append('documentType', dtype)\n        //const response = await axios.post(`https://sandbox-api.7oc.cl/v2/face-and-document`, formData)\n            const response = await axios.post(`https://sandbox-api.7oc.cl/v2/face-and-document`, formData)\n            setInformation(response.data)\n            console.log(information)\n            if (information.status == \"200\"){\n                message.success(\"ValidaciÃ³n positiva\")\n            } else{\n                message.error(\"ha ocurrido el sigiuiente error: \" + information.status)\n            }\n            setVisible(true)\n            setSpinner(true)\n\n    }\n\n        let navegador = navigator.userAgent\n        console.log (\"el navegador es: \" + navegador)\n\n\n    return (\n        <div>\n             \n        <Form\n            form={form}\n            onFinish={onFinish}\n        >   \n            <div hidden={div}>\n                <ApiFacial/>                   \n            </div>\n            <label style={{color:\"blue\"}}>tu navegador es: {navegador}</label> \n           <div hidden={div} className=\"\">\n                <div style={{textAlign:\"center\"}} className=\"text-center\">\n                        <div className=\"text-center text-white border\" style={{padding:10,  backgroundColor:'#03324B'}}>\n                        <div style={{padding:10} } className=\"text-center\">\n                        <p className=\"text-white text-center\">\n                        Para verificar su identidad se necesitan fotos de su cÃ©dula de identidad y rostro, siguiendo los pasos que te mostraremos a continuaciÃ³n.\n                        <br/>Evite usar accesorios como lentes o sombreros\n                        <br/>Seleccione el tipo de documento para comenzar con la verificaciÃ³n.\n                        </p>\n                        </div>\n                        </div>\n                        <Select style={{paddingTop:10}} hidden={hidden} placeholder=\"Selecciona el tipo de documento\" onChange={onChange}>\n                            <Option value=\"MEX1\"><Image preview={false} src=\"https://demo.toc.ai/static/id_mex1.png\"></Image></Option>\n                            <Option value=\"MEX2\"><Image preview={false} src=\"https://demo.toc.ai/static/id_mex2.png\">MEX2</Image></Option>\n                            <Option value=\"MEX3\"><Image preview={false} src=\"https://demo.toc.ai/static/id_mex3.png\">MEX3</Image></Option>\n                        </Select>\n                </div>\n            </div>\n            {/* <Row hidden={div} className=\"text-center\">\n                <div style={cols} className=\"text-center text-white\">\n                <Button style={{backgroundColor:'#18938B'}} type=\"primary\" onClick={divAutocaptureFront}>Realizar Onboarding\n                </Button>\n                </div>\n            </Row>\n            <Row>\n                <Col lg={12} xs={24} style={cols}  className=\"text-center\">\n                    <div>\n                    <label className=\"text-center text-white font-weight-bold\">Captura</label>\n                    </div>\n                    <Button type=\"primary\" onClick={divAutocaptureBack}>INE Posterior\n                    </Button>\n                </Col>\n            </Row> \n\n            <Row>\n                <Col lg={12} xs={24} style={cols} className=\"text-center\" >\n                    <div>\n                    <label className=\"text-center text-white font-weight-bold\">Captura</label>\n                    </div>\n                    <Button type=\"primary\" onClick={divLiveness}>Liveness\n                    </Button>\n                </Col></Row>*/}\n            <Col lg={24} xs={24} className=\"text-center\" style={{ alignItems: \"center\" }}>\n                    <Form.Item style={{ marginTop: 10}}>\n                    <Col style={{paddingBottom:20}}>\n                    <Button style={{backgroundColor:'#18938B'}} type=\"primary\" onClick={divAutocaptureFront}>Realizar Onboarding\n                    </Button>\n                    </Col>\n                    <Button className=\"btn-sm\"\n                                htmlType=\"submit\"\n                                className=\"text-light text-center\"\n                                style={{backgroundColor:'#18938B'}}\n                                >\n                                Enviar informacion\n                    </Button> \n                       \n                    </Form.Item>\n                    <Col style={{paddingBottom:20, textAlign:\"center\"}} className=\"text-center\">\n                        <Button className=\"text-white\" style={{backgroundColor:'#18938B'}}  onClick={showModal}>\n                            informacion escaneada \n                        </Button>\n                    </Col>\n                </Col>   \n            <Row hidden={div}>\n            <div className=\"example\" hidden={spinner}>\n                <Spin />\n            </div>\n                             \n            </Row> \n            <Modal\n                            title=\"informacion escaneada \"\n                            visible={visible}\n                            onOk={handleOk}\n                            confirmLoading={confirmLoading}\n                            onCancel={handleCancel}\n                        >   <p>Resultado Biometrico: {information[\"biometric result\"]}</p>\n                            <p>Apellidos Paternos: {information[\"family name\"] ? information[\"family name\"] : \"Documento sin escanear\"}</p>\n                            <br/>\n                            <p>Nombre Completo: {information.name ?  information.name : \"Documento sin escanear\"}</p>\n                            <br/>\n                            <p>Nacionalidad: {information.nationality ? information.nationality : \"Documento sin escanear\"}</p>\n                            <br/>\n                            <p>Genero: {information.gender ? information.gender : \"Documento sin escanear\"}</p>\n                            <br/>\n                            <p>Fecha ExpiraciÃ³n: {information[\"expiration date\"] ? information[\"expiration date\"] : \"Documento sin escanear\"}</p>\n                            <br/>\n                            <p>Numero de documento: {information[\"document number\"] ? information[\"document number\"] : \"Documento sin escanear\"}</p>\n                            <br/>\n                            <p>Fecha Nacimiento: {information[\"date of birth\"] ? information[\"date of birth\"] : \"Documento sin escanear\"}</p>\n                            <div className=\"text-center\">\n                                <Image src={imageBack} width={50} height={50}></Image>\n                                <Image src={imageFront} width={50} height={50}></Image>\n                                <Image src={imageLiveness} width={50} height={50}></Image>\n                            </div>\n            </Modal>\n           \n        </Form>\n            <div className=\"container container-fluid\" hidden={viewDiv} style={{height:\"50%\", textAlign:\"center\", marginBottom:\"auto\", marginTop:\"auto\"}}>\n                <div  id=\"containerfront\">\n\n                </div>\n            </div>\n            <div  className=\"container container-fluid\"  hidden={viewDiv1} style={{height:\"50%\"}}>\n                <div  id=\"container\">\n\n                </div>\n            </div>\n            <div  className=\"container container-fluid\"  hidden={viewDiv2} style={{height:\"50%\"}} >\n                <div id=\"liveness\">\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default APIForm;\n","import React from 'react';\nimport Form from './components/form';\nimport Api_Facial from \"./apiFacil/index\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Col } from \"antd\"\nimport 'antd/dist/antd.css'\n//import Session from \"./session/session\";\n//mport Autocapture from './AutoCaptura/autocapturecamera';\n\nimport { \n  BrowserRouter as Router, Route,\n} from \"react-router-dom\";\n\n\nfunction App(props) {\n\n\n  return (\n    <Form/>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}