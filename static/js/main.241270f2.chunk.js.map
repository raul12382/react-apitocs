{"version":3,"sources":["apiFacil/index.js","components/form.js","App.js","serviceWorker.js","index.js"],"names":["Index","className","style","backgroundColor","marginTop","padding","height","src","alt","marginBottom","Option","Select","APIForm","props","Form","useForm","form","useState","setImageFront","setImageBack","information","setInformation","visible","setVisible","confirmLoading","setConfirmLoading","setModalText","dtype","setdtype","tokenFront","setTokenFront","tokenBack","setTokenBack","tokenliveness","setTokenLiveness","hidden","setHidden","viewDiv","setViewDiv","viewDiv1","setViewDiv1","viewDiv2","setViewDiv2","div","setDiv","divAutocaptureBack","values","a","getSessionId","sessionId","console","log","autocapture","window","TOCautocapture","locale","session_id","document_type","document_side","callback","captured_token","image","message","success","token","image64","divLiveness","failure","error","http","divAutocaptureFront","imgFront","TOCliveness","onFinish","axios","get","response","data","formData","FormData","append","post","mrz","lg","xs","textAlign","display","paddingTop","placeholder","onChange","value","preview","alignItems","type","onClick","Item","htmlType","paddingBottom","title","onOk","setTimeout","onCancel","name","nationality","gender","id","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.241270f2.chunk.js","sourcesContent":["import React from 'react'\r\nimport { \r\n    Link\r\n} from \"react-router-dom\";\r\nimport Form from '../components/form';\r\n\r\nfunction Index() {\r\n\r\n    return (\r\n        <div className=\"card pl-6\" style={{backgroundColor:'#03324B'}} >\r\n            <img className=\"card-img-top text-align:center\" style={{marginTop:20, backgroundColor: '#18938B', padding:10}}  height={70} src=\"https://www.tocbiometrics.com/img/logoTOC.svg\" alt=\"Card image cap\"/>\r\n            <div className=\"card-body\">\r\n            <p className=\"card-text text-white font-weight-bold text-center\">Â¡Te damos la bienvenida a la Demo de TOC Biometrics!</p>\r\n            </div>\r\n            <div className=\"text-center\">\r\n                <button className=\"card-btn border border border-primary rounded cardtext-align:center\" style={{marginBottom: 20}}>\r\n                        <img src=\"https://dev-web-plugins.s3.amazonaws.com/demo-toc-ci/static/onboarding.svg\"/>\r\n                </button>\r\n            </div>\r\n            <p className=\"card-text text-white font-weight-bold text-center\">Onboarding</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import {Button, Col, Form, Row, Select, message, Modal, Image} from \"antd\";\r\nimport React, { useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport ApiFacial from \"../apiFacil/index\";\r\nconst {Option} = Select;\r\n\r\nconst APIForm  = (props) => {\r\n    const [form] = Form.useForm();\r\n    const [imageFront, setImageFront] = useState(\"\");\r\n    const [imageBack, setImageBack] = useState('');\r\n    const [information, setInformation] = useState({});\r\n    const [visible, setVisible] = useState(false);\r\n    const [confirmLoading, setConfirmLoading] = useState(false);\r\n    const [modalText, setModalText] = useState('');\r\n    const [dtype, setdtype] = useState(\"\"); \r\n    const [tokenFront, setTokenFront] = useState(\"\")\r\n    const [tokenBack, setTokenBack] = useState(\"\")\r\n    const [tokenliveness, setTokenLiveness] = useState(\"\")\r\n    const [hidden, setHidden] = useState(false)\r\n    const [viewDiv, setViewDiv] = useState(true)\r\n    const [viewDiv1, setViewDiv1] = useState(true)\r\n    const [viewDiv2, setViewDiv2] = useState(true)\r\n    const [div, setDiv] = useState(false)\r\n    const [match, setMatch] = useState(null)\r\n    \r\n    const onChange = (value) =>{\r\n        const a = value\r\n        setdtype(a)\r\n        setHidden(true)\r\n        console.log(dtype)\r\n    }\r\n\r\n\r\n\r\n    const divAutocaptureBack = async (values) =>{\r\n        setViewDiv1(false)\r\n        const sessionId = await getSessionId();\r\n        console.log('Session id', sessionId)\r\n        const autocapture = window.TOCautocapture;\r\n        const TOCautocapture = autocapture;\r\n\r\n        TOCautocapture('container', {\r\n            locale: \"es\",\r\n            session_id: \"2584e90c975b4ea1a2278ede44e94f9d\",\r\n            document_type: dtype,\r\n            document_side: \"back\",\r\n            callback: function(captured_token, image){ \r\n            message.success('Captura Realizada', 3)\r\n            const token = captured_token\r\n            const image64 = image\r\n            console.log(captured_token)   \r\n            setTokenBack(token)\r\n            setImageBack(image64)\r\n            setViewDiv1(true)\r\n            divLiveness()\r\n        },\r\n           failure: function(error){ message.error('Se ha generado el error: ' + error)},\r\n           http: true, \r\n       }) \r\n    } \r\n\r\n    const divAutocaptureFront = async (values) =>{\r\n        console.log(dtype)\r\n        setDiv(true)\r\n        setViewDiv(false)\r\n        const sessionId = await getSessionId();\r\n        console.log('Session id', sessionId)\r\n        const autocapture = window.TOCautocapture;\r\n        const TOCautocapture = autocapture;\r\n\r\n        TOCautocapture('containerfront', {\r\n            locale: \"es\",\r\n            session_id: \"2584e90c975b4ea1a2278ede44e94f9d\",\r\n            document_type: dtype,\r\n            document_side: \"front\",\r\n            callback: function(captured_token, image){ \r\n            message.success('Captura Realizada', 3);\r\n            console.log(image)  \r\n            const imgFront = image \r\n            const tokenF = captured_token\r\n            setTokenFront(tokenF)\r\n            setImageFront(imgFront)\r\n            setViewDiv(true)\r\n            divAutocaptureBack()\r\n        },\r\n        failure: function(error){ message.error('Se ha generado el error: ' + error)} , \r\n        http: true,\r\n    }) \r\n    } \r\n\r\n    const divLiveness = async (values) =>{\r\n\r\n        setViewDiv2(false)\r\n        const sessionId = await getSessionId();\r\n        console.log('Session id', sessionId)\r\n        const autocapture = window.TOCliveness ;\r\n        const TOCliveness  = autocapture;\r\n        TOCliveness ('liveness', {\r\n        locale: \"es\",\r\n        session_id: \"2584e90c975b4ea1a2278ede44e94f9d\",\r\n        callback: function(token){ \r\n        message.success('Captura Realizada', 3)\r\n        const tl= token  \r\n        setTokenLiveness(tl)\r\n        onFinish()\r\n        setViewDiv2(true)\r\n        },\r\n        failure: function(error){ message.error('Se ha generado el error: ' + error)},\r\n        http: true, \r\n    }) \r\n    } \r\n\r\n\r\n\r\n    const showModal = () => {\r\n        setVisible(true);\r\n    };\r\n    const handleOk = () => {\r\n        setModalText('El modal se cerrara en dos segundos');\r\n        setConfirmLoading(true);\r\n        setTimeout(() => {\r\n          setVisible(false);\r\n          setConfirmLoading(false);\r\n        }, 2000);\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        console.log('Clicked cancel button');\r\n        setVisible(false);\r\n    };\r\n\r\n    const cols = {\r\n        padding: 10\r\n    };\r\n\r\n    const getSessionId = async () => {\r\n        try{\r\n            const response = await axios.get('http://54.232.52.181:3001/session')\r\n            console.log('Session id response', response)\r\n            return response.data.session_id;\r\n        }catch(err){\r\n            console.log('Error al obtener sesiÃ³n', err)\r\n        }\r\n    }\r\n\r\n/*     const statusMatch = ()=>{\r\n        if (match === 2) {\r\n            message.success(\"Resultado positivo con un 99.99% de confianza.\")\r\n            if (match === 1) {\r\n                message.warning(\"[DEPRECADO] Resultado positivo con un 96.5% de confianza.\")\r\n            }if (match === 0) {\r\n                message.error(\"Resultado negativo de la verificaciÃ³n.\")\r\n            }if (match === -1) {\r\n                message.error(\"No se ha podido encontrar una cara en la imagen enviada.\")\r\n            }\r\n        }\r\n    } */\r\n\r\n    const apiKey = '433a8e1ed0dc4495974a9f95018eed8f' \r\n    const onFinish = async (values) => {\r\n       try {\r\n            let formData = new FormData();\r\n            formData.append('id_front',tokenFront )\r\n            formData.append('id_back',tokenBack )\r\n            formData.append('selfie', tokenliveness)\r\n            formData.append('apiKey', apiKey) \r\n            formData.append('documentType', dtype)\r\n        //const response = await axios.post(`https://sandbox-api.7oc.cl/v2/face-and-document`, formData)\r\n            const response = await axios.post(`https://sandbox-api.7oc.cl/v2/face-and-document`, formData)\r\n            setInformation(response.data[\"information from document\"].mrz.data)\r\n            message.success('Datos enviados correctamente', 3)\r\n            setVisible(true)\r\n        return response\r\n        } catch (error) {\r\n            message.error('Error al capturar la informaciÃ³n');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n             \r\n        <Form\r\n            form={form}\r\n            onFinish={onFinish}\r\n        >   \r\n            <div hidden={div}>\r\n                <ApiFacial/>                   \r\n            </div>\r\n           <Row hidden={div}>\r\n                <Col lg={12} xs={24} style={{textAlign:\"center\", display:\"inline-block\"}} className=\"text-center\">\r\n                        <div className=\"text-center text-white border\" style={{padding:10,  backgroundColor:'#03324B'}}>\r\n                        <div className=\"card-body\" style={{padding:10}}>\r\n                        <p className=\"card-text text-white col d-flex\">\r\n                        Para verificar su identidad se necesitan fotos de su cÃ©dula de identidad y rostro, siguiendo los pasos que te mostraremos a continuaciÃ³n.\r\n                        <br/>Evite usar accesorios como lentes o sombreros\r\n                        <br/>Seleccione el tipo de documento para comenzar con la verificaciÃ³n.\r\n                        </p>\r\n                        </div>\r\n                        </div>\r\n                        <Select style={{paddingTop:10}} hidden={hidden} placeholder=\"Selecciona el tipo de documento\" onChange={onChange}>\r\n                            <Option value=\"MEX1\"><Image preview={false} src=\"https://demo.toc.ai/static/id_mex1.png\"></Image></Option>\r\n                            <Option value=\"MEX2\"><Image preview={false} src=\"https://demo.toc.ai/static/id_mex2.png\">MEX2</Image></Option>\r\n                            <Option value=\"MEX3\"><Image preview={false} src=\"https://demo.toc.ai/static/id_mex3.png\">MEX3</Image></Option>\r\n                        </Select>\r\n                </Col>\r\n            </Row>\r\n            <Row hidden={div}>\r\n                <Col lg={12} xs={24} style={cols}  className=\"text-center text-white\">\r\n                <div>\r\n                    <label className=\"text-center text-white font-weight-bold\">Procedimiento</label>\r\n                </div>\r\n                <Button style={{backgroundColor:'#18938B', alignItems:\"center\"}} type=\"primary\" onClick={divAutocaptureFront}>Realizar Onboarding\r\n                </Button>\r\n                </Col>\r\n            </Row>\r\n            {/* <Row>\r\n                <Col lg={12} xs={24} style={cols}  className=\"text-center\">\r\n                    <div>\r\n                    <label className=\"text-center text-white font-weight-bold\">Captura</label>\r\n                    </div>\r\n                    <Button type=\"primary\" onClick={divAutocaptureBack}>INE Posterior\r\n                    </Button>\r\n                </Col>\r\n            </Row> \r\n\r\n            <Row>\r\n                <Col lg={12} xs={24} style={cols} className=\"text-center\" >\r\n                    <div>\r\n                    <label className=\"text-center text-white font-weight-bold\">Captura</label>\r\n                    </div>\r\n                    <Button type=\"primary\" onClick={divLiveness}>Liveness\r\n                    </Button>\r\n                </Col></Row>*/}\r\n            <Row hidden={div}>\r\n                <Col lg={24} xs={24} className=\"text-center\" style={{ alignItems: \"center\" }}>\r\n                    <Form.Item style={{ marginTop: 10}}>\r\n                        <Button className=\"btn-sm\"\r\n                                htmlType=\"submit\"\r\n                                className=\"text-light text-center\"\r\n                                style={{backgroundColor:'#18938B'}}\r\n                                >\r\n                                Enviar informacion\r\n                        </Button> \r\n                       \r\n                    </Form.Item>\r\n                    <Col style={{paddingBottom:20, textAlign:\"center\"}} className=\"text-center\">\r\n                        <Button className=\"text-white\" style={{backgroundColor:'#18938B'}}  onClick={showModal}>\r\n                            informacion escaneada \r\n                        </Button>\r\n                    </Col>\r\n                </Col>                \r\n            </Row> \r\n            <Modal\r\n                            title=\"informacion escaneada \"\r\n                            visible={visible}\r\n                            onOk={handleOk}\r\n                            confirmLoading={confirmLoading}\r\n                            onCancel={handleCancel}\r\n                        >   <p>Resultado Biometrico: {information[\"biometric result\"]}</p>\r\n                            <p>Apellidos Paternos: {information[\"family name\"] ? information[\"family name\"] : \"Documento sin escanear\"}</p>\r\n                            <br/>\r\n                            <p>Nombre Completo: {information.name ?  information.name : \"Documento sin escanear\"}</p>\r\n                            <br/>\r\n                            <p>Nacionalidad: {information.nationality ? information.nationality : \"Documento sin escanear\"}</p>\r\n                            <br/>\r\n                            <p>Genero: {information.gender ? information.gender : \"Documento sin escanear\"}</p>\r\n                            <br/>\r\n                            <p>Fecha ExpiraciÃ³n: {information[\"expiration date\"] ? information[\"expiration date\"] : \"Documento sin escanear\"}</p>\r\n                            <br/>\r\n                            <p>Numero de documento: {information[\"document number\"] ? information[\"document number\"] : \"Documento sin escanear\"}</p>\r\n                            <br/>\r\n                            <p>Fecha Nacimiento: {information[\"date of birth\"] ? information[\"date of birth\"] : \"Documento sin escanear\"}</p>\r\n            </Modal>\r\n           \r\n            \r\n        </Form>\r\n            <div className=\"container container-fluid\" hidden={viewDiv} style={{height:100, textAlign:\"center\", marginBottom:\"auto\", marginTop:\"auto\"}} id=\"containerfront\">\r\n            \r\n            </div>\r\n            <div  className=\"container container-fluid\"  hidden={viewDiv1} style={{height:100}} id=\"container\">\r\n            \r\n            </div>\r\n            <div  className=\"container container-fluid\"  hidden={viewDiv2} style={{height:100}} id=\"liveness\">\r\n            \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default APIForm;\r\n","import React from 'react';\nimport Form from './components/form';\nimport Api_Facial from \"./apiFacil/index\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Col } from \"antd\"\nimport 'antd/dist/antd.css'\n//import Session from \"./session/session\";\n//mport Autocapture from './AutoCaptura/autocapturecamera';\n\nimport { \n  BrowserRouter as Router, Route,\n} from \"react-router-dom\";\n\n\nfunction App(props) {\n\n\n  return (\n    <Form/>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}